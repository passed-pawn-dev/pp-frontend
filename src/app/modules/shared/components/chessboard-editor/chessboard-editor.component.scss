/* stylelint-disable at-rule-empty-line-before */

@use 'variables' as *;
@use 'sass:color';

.chessboard {
  aspect-ratio: 1/1;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  min-width: 30rem;
  height: 30rem;
  position: relative;
  border-radius: 1rem;
  overflow: hidden;
  // border: 3px solid black;
}

.chessboard-rank {
  bottom: 0.25rem;
  font-weight: 600;
  position: absolute;
  right: 0.25rem;
  user-select: none;
  pointer-events: none;
}

.chessboard-file {
  font-weight: 600;
  left: 0.25rem;
  position: absolute;
  top: 0.25rem;
  user-select: none;
  pointer-events: none;
}

.chessboard-field {
  aspect-ratio: 1/1;
  height: 100%;
  max-height: 5rem;
  max-width: 5rem;
  position: relative;
  width: 100%;

  .chessboard-field-content {
    display: grid;
    height: 100%;
    padding-bottom: 0.25rem;
    place-content: center;

    img {
      transform: scale(1.2);
    }
  }

  .king-in-check {
    background-color: $king-in-check-background;
  }
}

img {
  user-select: none;
}

.main-content {
  display: flex;
  width: 100%;
}

@for $row from 1 through 8 {
  @for $col from 1 through 8 {
    .chessboard {
      .chessboard-field:nth-child(#{$col+($row - 1) * 8}) {
        background-color: if(
          ($row + $col) % 2 == 0,
          $white-square-background,
          $black-square-background
        );

        .selected-square,
        .last-move {
          background-color: if(
            ($row + $col) % 2 == 0,
            $white-square-selected-background,
            $black-square-selected-background
          );
        }

        .piece-square {
          .safe-square {
            background-color: transparent;
            border: if(
              ($row + $col) % 2 == 0,
              0.5rem solid $white-square-valid-move-circle-color,
              0.5rem solid $black-square-valid-move-circle-color
            );
            border-radius: 100%;
            height: 100%;
            left: 0;
            top: 0;
            width: 100%;
          }
        }

        .chessboard-file,
        .chessboard-rank {
          color: if(
            ($row + $col) % 2 == 0,
            $black-square-background,
            $white-square-background
          );
        }
      }
    }
  }
}

.loading-overlay {
  height: calc(100vh - 13rem);
  position: absolute;
  width: 40rem;
  z-index: 100;
}

.piece-list {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.util-buttons {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: 0.5rem;
}

.operation-btn {
  border: none;
  background-color: transparent;
  color: $primary;
  font-size: $font-S;
  border-radius: 0.5rem;
  width: fit-content;
  padding: 0.5rem 1rem;
  cursor: pointer;
  // border: 1px solid;
  white-space: nowrap;

  &:hover {
    background-color: color.adjust($primary, $lightness: 40%);
  }
}

.clear {
  color: red;

  &:hover {
    background-color: color.adjust(red, $lightness: 40%);
  }
}

.top-section {
  display: flex;
  gap: 1rem;
  width: 100%;

  .main-section {
    .top {
      display: flex;
      gap: 1rem;

      .elephant-tile {
        background-color: white;
        border-radius: 1rem;
        padding: 1rem;
        min-width: 34rem;
        display: flex;
        justify-content: flex-end;
        align-items: flex-end;
      }
    }
  }
}

.panel {
  background-color: white;
  border-radius: 1rem;
  padding: 1rem;
}

.header {
  font-size: $font-M;
  font-weight: 700;
  line-height: $font-M;
  white-space: nowrap;
  margin-bottom: 0.5rem;
}

.line {
  width: 100%;
  height: 1px;
  background-color: $border-secondary;
  margin: 1.5rem 0;
}

.left-tile {
  background-color: white;
  border-radius: 1rem;
  padding: 1rem;
  // border: 3px solid red;
  width: 16rem;

  .piece-selection {
    display: flex;
    gap: 1rem;
    justify-content: center;

    .left-board-piece {
      width: 2rem;
    }
  }
}

.fen-tile {
  // border: 3px solid blue;
  margin-top: 1rem;
  background-color: white;
  border-radius: 1rem;
  padding: 1rem;
  // height: 16rem;

  form {
    display: flex;
    gap: 3rem;
    margin-bottom: 1rem;
  }

  input,
  select {
    border-radius: 0.5rem;
    border: 1px solid $border-secondary;
    font-size: $font-S;
    padding: 0.5rem;
    height: 2.6rem;
    font-family: 'Poppins', sans-serif;
    font-style: normal;
    width: 3rem;
  }

  .fen-input {
    width: 100%;
    padding: 0.5rem;
  }

  .form-input {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;

    .label {
      font-size: $font-XS;
      color: $text-secondary;
    }

    select,
    input[type='number'] {
      height: 2rem;
      padding: 0;
      padding-left: 0.5rem;
    }

    input[type='checkbox'] {
      height: 1rem;
      width: 1rem;
    }

    select {
      width: 5rem;
    }

    input[type='text'] {
      width: 100%;
    }

    /* The switch - the box around the slider */
    .switch {
      position: relative;
      display: inline-block;
      width: 3.5rem;
      height: 2rem;
    }

    /* Hide default HTML checkbox */
    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    /* The slider */
    .slider {
      position: absolute;
      cursor: pointer;
      inset: 0;
      background-color: $background;
      border-radius: 1rem;
      transition: 0.2s;
    }

    .slider::before {
      position: absolute;
      content: '';
      height: 1.5rem;
      width: 1.5rem;
      left: 0.25rem;
      bottom: 0.25rem;
      background-color: $primary;
      transition: 0.2s;
      border-radius: 1rem;
    }

    input:checked + .slider {
      background-color: $primary-lighter;
    }

    input:focus + .slider {
      box-shadow: 0 0 1px $primary-lighter;
    }

    input:checked + .slider::before {
      transform: translateX(1.5rem);
    }

    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }

    .slider.round::before {
      border-radius: 50%;
    }
  }
}

.fen-form {
  display: flex;
  align-items: start;
  gap: 1rem;
}

.short-input {
  width: 2rem;
}

.clock-inputs {
  display: flex;
  flex-direction: column;
}

.error {
  color: red;
  font-size: small;
}

.icon {
  width: 1.5rem;
}

.selectable {
  display: flex;
  align-items: center;
  justify-content: center;
  &:hover {
    cursor: pointer;
    background-color: $primary-lighter;
  }
  border-radius: 0.5rem;
  border: 2px solid transparent;
}

.selected {
  background-color: $primary-lighter;
  border: 2px solid $primary;
}

.color-select-buttons {
  .severity-input {
    cursor: pointer;
    appearance: none;
    margin: 0;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 100%;
  }
  .info {
    background-color: blue;
  }
  .warning {
    background-color: yellow;
  }
  .danger {
    background-color: red;
  }
  .correct {
    background-color: green;
  }
  display: flex;
  justify-content: center;

  .selected {
    background-color: $primary-lighter;
    border: 2px solid $primary;
  }
}

.color-btn-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  .color-btn {
    background-color: transparent;
    border: 1px solid $primary;
    color: $primary;
    border-radius: 0.25rem;
    cursor: pointer;

    &:hover {
      background-color: $primary-lighter;
    }
  }
}

.round {
  border-radius: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.2rem;
  border: 2px solid transparent;
}
